{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAAA,mEAA6C;AAC7C,mFAA0B;AAE1B,cAAI,CAAC,IAAI,CAAC,cAAG,EAAE,wBAAa,CAAC;;;;;;;;;;;;;;;;ACF7B,uFAA6B;AAE7B,MAAqB,IAAI;IAKb,MAAM,CAAC,iBAAiB;QAC5B,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;QAClB,CAAC;IACL,CAAC;IAEO,MAAM,CAAC,OAAO;QACtB,6BAA6B;IAC7B,CAAC;IAEO,MAAM,CAAC,OAAO;QAClB,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC;YACrC,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,GAAG;YACX,cAAc,EAAE;gBACZ,OAAO,EAAE,mBAAI,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC;aAC9C;SAEJ,CAAC;QAEF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,6FAAyB,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC;IAC9C,CAAC;IAED,MAAM,CAAC,IAAI,CAAC,GAAiB,EAAE,aAA4C;QACvE,IAAI,CAAC,aAAa,GAAG,aAAa;QAClC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAEf,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE,IAAI,CAAC,iBAAiB,CAAC;QACxD,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;IACtC,CAAC;CACJ;AApCD,0BAoCC;;;;;;;;;;;ACvCD;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://overwolf-api/./src/app.ts","webpack://overwolf-api/./src/main.ts","webpack://overwolf-api/external node-commonjs \"electron\"","webpack://overwolf-api/external node-commonjs \"node:path\"","webpack://overwolf-api/webpack/bootstrap","webpack://overwolf-api/webpack/before-startup","webpack://overwolf-api/webpack/startup","webpack://overwolf-api/webpack/after-startup"],"sourcesContent":["import { app, BrowserWindow } from 'electron'\nimport  Main from './main'\n\nMain.main(app, BrowserWindow)","import { BrowserWindow } from \"electron\";\nimport path from \"node:path\";\n\nexport default class Main {\n    static mainWindow: Electron.BrowserWindow;\n    static app: Electron.App;\n    static BrowserWindow;\n\n    private static onWindowAllClosed() {\n        if (process.platform !== 'darwin') {\n            Main.app.quit;\n        }\n    }\n\n    private static onClose() {\n    //    Main.mainWindow = null;\n    }\n\n    private static onReady() {\n        Main.mainWindow = new Main.BrowserWindow({\n            width: 800,\n            height: 800,\n            webPreferences: {\n                preload: path.join(__dirname, 'preload.ts')\n            }\n        \n        })\n\n        Main.mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY)\n        Main.mainWindow.on('closed', Main.onClose)\n    }\n\n    static main(app: Electron.App, browserWindow: typeof Electron.BrowserWindow) {\n        Main.BrowserWindow = browserWindow\n        Main.app = app;\n\n        Main.app.on('window-all-closed', Main.onWindowAllClosed)\n        Main.app.on('ready', Main.onReady)\n    }\n}","module.exports = require(\"electron\");","module.exports = require(\"node:path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/app.ts\");\n",""],"names":[],"sourceRoot":""}